// <auto-generated />
using System;
using EFCoreAssignmentDay1.DBcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreAssignmentDay1.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240514072150_UpdateDataSeed")]
    partial class UpdateDataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec4b43f0-1ad9-4462-be99-c4b8a998edde"),
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = new Guid("d20e766e-2cbb-403b-8e15-ec262d3a9523"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("75fd321b-0296-48a7-807b-e4da2ba24090"),
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = new Guid("0d94a58c-9233-4ffb-9ddd-c17f78e6dbbc"),
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4168392f-dc02-4d7a-8ea5-cc6f85d1a3ca"),
                            DepartmentId = new Guid("ec4b43f0-1ad9-4462-be99-c4b8a998edde"),
                            JoinedDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("7b707dc4-68b4-4dce-b9d9-676845178909"),
                            DepartmentId = new Guid("d20e766e-2cbb-403b-8e15-ec262d3a9523"),
                            JoinedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jane Smith"
                        });
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("611b1df4-a602-4bcd-a1b2-37856963c119"),
                            Name = "Project A"
                        },
                        new
                        {
                            Id = new Guid("d5352d56-261f-4433-b502-d8984a152324"),
                            Name = "Project B"
                        });
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.ProjectEmployee", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Project_Employee");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("611b1df4-a602-4bcd-a1b2-37856963c119"),
                            EmployeeId = new Guid("4168392f-dc02-4d7a-8ea5-cc6f85d1a3ca"),
                            Enable = true,
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ProjectId = new Guid("d5352d56-261f-4433-b502-d8984a152324"),
                            EmployeeId = new Guid("7b707dc4-68b4-4dce-b9d9-676845178909"),
                            Enable = true,
                            Id = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Salary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2429578-2a05-4a70-8814-6feb31e3f8ba"),
                            Amount = 1500f,
                            EmployeeId = new Guid("4168392f-dc02-4d7a-8ea5-cc6f85d1a3ca")
                        },
                        new
                        {
                            Id = new Guid("0c60d053-90f7-4000-9316-1085df7b4f9b"),
                            Amount = 2000f,
                            EmployeeId = new Guid("7b707dc4-68b4-4dce-b9d9-676845178909")
                        });
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Employee", b =>
                {
                    b.HasOne("EFCoreAssignmentDay1.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.ProjectEmployee", b =>
                {
                    b.HasOne("EFCoreAssignmentDay1.Models.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreAssignmentDay1.Models.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Salary", b =>
                {
                    b.HasOne("EFCoreAssignmentDay1.Models.Employee", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("EFCoreAssignmentDay1.Models.Salary", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Employee", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Salary")
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreAssignmentDay1.Models.Project", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
